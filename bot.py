import asyncio
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton

logging.basicConfig(level=logging.INFO)
BOT_TOKEN = '8449137700:AAEaGnBplBuYKlBcoQtn-TltQJ5dZomDxNk'

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—åüë§"),       KeyboardButton(text="–ê–Ω–∞–ª–∏–∑ –∏–≥—Äüîç")],
        [KeyboardButton(text="–ü–æ–º–æ—â—å")]
    ],
    resize_keyboard=True
)

profile_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü—Ä–∏–≤—è–∑–∞—Ç—å Lichess"), KeyboardButton(text="–ü—Ä–∏–≤—è–∑–∞—Ç—å Chess.com")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)

analysis_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—ã"), KeyboardButton(text="–ú–æ–∏ –æ—à–∏–±–∫–∏")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True
)


@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç:",reply_markup=main_kb)

@dp.message(F.text == "–ü—Ä–æ—Ñ–∏–ª—å")
async def open_profile(message: Message):
    await message.answer("–†–∞–∑–¥–µ–ª ¬´–ü—Ä–æ—Ñ–∏–ª—å¬ª. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",reply_markup=profile_kb)

@dp.message(F.text == "–ê–Ω–∞–ª–∏–∑ –∏–≥—Ä")
async def open_analysis(message: Message):
    await message.answer("–†–∞–∑–¥–µ–ª ¬´–ê–Ω–∞–ª–∏–∑ –∏–≥—Ä¬ª. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",reply_markup=analysis_kb)

@dp.message(F.text == "–ü–æ–º–æ—â—å")
async def help_command(message: Message):
    text = (
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º:\n"
        "‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å ‚Äî –ø—Ä–∏–≤—è–∑–∞—Ç—å Lichess/Chess.com\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∏–≥—Ä ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä—Ç–∏–∏ –∏ —Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫–∏\n"
        "‚Ä¢ –ù–∞–∑–∞–¥ ‚Äî –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    )
    await message.answer(text, reply_markup=main_kb)

@dp.message(F.text == "–ü—Ä–∏–≤—è–∑–∞—Ç—å Lichess")
async def bind_lichess(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –Ω–∞ Lichess:", reply_markup=profile_kb)

@dp.message(F.text == "–ü—Ä–∏–≤—è–∑–∞—Ç—å Chess.com")
async def bind_chesscom(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫ –Ω–∞ Chess.com:", reply_markup=profile_kb)

@dp.message(F.text == "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—ã")
async def sync_games(message: Message):
    await message.answer("–ó–∞–≥—Ä—É–∂–∞—é –≤–∞—à–∏ –ø–∞—Ä—Ç–∏–∏‚Ä¶", reply_markup=analysis_kb)
    # —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à—É –ª–æ–≥–∏–∫—É geteval + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î

@dp.message(F.text == "–ú–æ–∏ –æ—à–∏–±–∫–∏")
async def show_errors(message: Message):
    await message.answer("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∑–∞–¥–∞—á–∏ –ø–æ –≤–∞—à–∏–º –æ—à–∏–±–∫–∞–º‚Ä¶", reply_markup=analysis_kb)
    # —Å—é–¥–∞ –≤—ã–±–æ—Ä–∫—É –∏–∑ –ë–î –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–¥–∞—á

@dp.message(F.text == "–ù–∞–∑–∞–¥")
async def go_back(message: Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_kb)

# –õ–æ–≤–∏–º –≤—Å—ë, —á—Ç–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ –ø–æ–¥ —Ñ–∏–ª—å—Ç—Ä—ã
@dp.message()
async def fallback(message: Message):
    await message.answer(
        "–ù–µ –ø–æ–Ω—è–ª –≤–∞—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é.",
        reply_markup=main_kb
    )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

